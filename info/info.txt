
-->     config.py
from dataclasses import dataclass
from environs import Env

@dataclass
class TgBot:
    token: str  # –¢–æ–∫–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—É

@dataclass
class Config:
    tg_bot: TgBot

def load_config(path: str | None = None) -> Config:
    env = Env()
    env.read_env(path)
    return Config(tg_bot=TgBot(token=env('BOT_TOKEN')))


-->     .gitignor
.venv
.env
.mypy_cache/
.idea/
venv/
__pycache__/


-->     main.py
import asyncio
import logging

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties #DefaultBotProperties –∏–∑ aiogram.client.default –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–æ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
from aiogram.enums import ParseMode
from config_data.config import Config, load_config
from handlers import other_handlers, user_handlers

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger(__name__)


# –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logging.basicConfig(
        level=logging.INFO,
        format='%(filename)s:%(lineno)d #%(levelname)-8s '
               '[%(asctime)s] - %(name)s - %(message)s')

    # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    logger.info('Starting bot')

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é config
    config: Config = load_config()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    bot = Bot(
        token=config.tg_bot.token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )
    dp = Dispatcher()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
    dp.include_router(user_handlers.router)
    dp.include_router(other_handlers.router)

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º polling
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


asyncio.run(main())


-->     keyboards.py
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from lexicon.lexicon_ru import LEXICON_RU

# ------- –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á–µ—Ä–µ–∑ ReplyKeyboardBuilder -------

# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ —Å–æ–≥–ª–∞—Å–∏—è –∏ –æ—Ç–∫–∞–∑–∞
button_yes = KeyboardButton(text=LEXICON_RU['yes_button'])
button_no = KeyboardButton(text=LEXICON_RU['no_button'])

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞–≤–∞–π" –∏ "–ù–µ —Ö–æ—á—É!"
yes_no_kb_builder = ReplyKeyboardBuilder()

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –±–∏–ª–¥–µ—Ä —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º width=2
yes_no_kb_builder.row(button_yes, button_no, width=2)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞–≤–∞–π!" –∏ "–ù–µ —Ö–æ—á—É!"
yes_no_kb: ReplyKeyboardMarkup = yes_no_kb_builder.as_markup(
    one_time_keyboard=True, #—Ç–æ —ç—Ç–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º "–ù–µ —Ö–æ—á—É!"
    resize_keyboard=True
)

# ------- –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∏–ª–¥–µ—Ä–∞ -------

# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–≥—Ä–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
button_rock = KeyboardButton(text=LEXICON_RU['rock'])
button_scissors = KeyboardButton(text=LEXICON_RU['scissors'])
button_paper = KeyboardButton(text=LEXICON_RU['paper'])

# –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ö–∞–º–µ–Ω—å üóø",
# "–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ" –∏ "–ë—É–º–∞–≥–∞ üìú" –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
game_kb = ReplyKeyboardMarkup(
    keyboard=[[button_rock],
              [button_scissors],
              [button_paper]],
    resize_keyboard=True
)

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞–≤–∞–π!" -
# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ yes_no_kb –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ –∏–≥—Ä–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.

# –ò–≥—Ä–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ game_kb –ø–∞—Ä–∞–º–µ—Ç—Ä one_time_keyboard –Ω–µ –Ω—É–∂–µ–Ω,
# –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –≤—ã–±–æ—Ä,
# –±–æ—Ç –±—É–¥–µ—Ç —Å–æ–æ–±—â–∞—Ç—å –æ —Ç–æ–º, –∫—Ç–æ –ø–æ–±–µ–¥–∏–ª –∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É yes_no_kb,
# —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑.

# –¢–µ–∫—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã,
# –±–µ—Ä–µ–º –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –∫–ª—é—á–∞–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è LEXICON_RU,
# –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –º–æ–¥—É–ª—è lexicon_ru –≤ –ø–∞–∫–µ—Ç–µ lexicon.

# –í–æ–æ–±—â–µ, –µ—Å–ª–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä - –æ–Ω–∏ –Ω–µ —Ö–∞—Ä–¥–∫–æ–¥—è—Ç—Å—è –∫–∞–∫ –≤ —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ.
# –û–Ω–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–∞ –ª–µ—Ç—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–º–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫,
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥–µ, —Ç–µ–∫—Å—Ç—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –∏ —Ç.–ø.
# –ù–æ –∑–¥–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤—Å–µ–≥–æ –¥–≤–µ, –ø–æ—ç—Ç–æ–º—É –Ω–∞—à –ø–æ–¥—Ö–æ–¥ –º–æ–∂–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è –æ–ø—Ä–∞–≤–¥–∞–Ω–Ω—ã–º.


-->     lexicon_ru.py
LEXICON_RU: dict[str, str] = {
    '/start': '<b>–ü—Ä–∏–≤–µ—Ç!</b>\n–î–∞–≤–∞–π —Å —Ç–æ–±–æ–π —Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É '
              '"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞"?\n\n–ï—Å–ª–∏ —Ç—ã, –≤–¥—Ä—É–≥, '
              '–∑–∞–±—ã–ª –ø—Ä–∞–≤–∏–ª–∞, –∫–æ–º–∞–Ω–¥–∞ /help —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç!\n\n<b>–ò–≥—Ä–∞–µ–º?</b>',
    '/help': '–≠—Ç–æ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–∞. –ú—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–ª–∂–Ω—ã '
             '—Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –∏–∑ —Ç—Ä–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –ö–∞–º–µ–Ω—å, '
             '–Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞.\n\n–ï—Å–ª–∏ –Ω–∞—à –≤—ã–±–æ—Ä '
             '—Å–æ–≤–ø–∞–¥–∞–µ—Ç - –Ω–∏—á—å—è, –∞ –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –∫–∞–º–µ–Ω—å '
             '–ø–æ–±–µ–∂–¥–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã, –Ω–æ–∂–Ω–∏—Ü—ã –ø–æ–±–µ–∂–¥–∞—é—Ç –±—É–º–∞–≥—É, '
             '–∞ –±—É–º–∞–≥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –∫–∞–º–µ–Ω—å.\n\n<b>–ò–≥—Ä–∞–µ–º?</b>',
    'rock': '–ö–∞–º–µ–Ω—å üóø',
    'paper': '–ë—É–º–∞–≥–∞ üìú',
    'scissors': '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ',
    'yes_button': '–î–∞–≤–∞–π!',
    'no_button': '–ù–µ —Ö–æ—á—É!',
    'other_answer': '–ò–∑–≤–∏–Ω–∏, —É–≤—ã, —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–Ω–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ...',
    'yes': '–û—Ç–ª–∏—á–Ω–æ! –î–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä!',
    'no': '–ñ–∞–ª—å...\n–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≤–µ—Ä–Ω–∏ '
          '–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–î–∞–≤–∞–π!"',
    'bot_won': '–Ø –ø–æ–±–µ–¥–∏–ª!\n\n–°—ã–≥—Ä–∞–µ–º –µ—â–µ?',
    'user_won': '–¢—ã –ø–æ–±–µ–¥–∏–ª! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!\n\n–î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –µ—â–µ?',
    'nobody_won': '–ù–∏—á—å—è!\n\n–ü—Ä–æ–¥–æ–ª–∂–∏–º?',
    'bot_choice': '–ú–æ–π –≤—ã–±–æ—Ä'
}


->      other_handlers.py
from aiogram import Router
from aiogram.types import Message
from lexicon.lexicon_ru import LEXICON_RU

router = Router()

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –¥—Ä—É–≥–∏–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã
@router.message()
async def send_answer(message: Message):
    await message.answer(text=LEXICON_RU['other_answer'])


->      user_handlers.py
from aiogram import F, Router
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from keyboards.keyboards import game_kb, yes_no_kb
from lexicon.lexicon_ru import LEXICON_RU
from services.services import get_bot_choice, get_winner

router = Router()

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text=LEXICON_RU['/start'], reply_markup=yes_no_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@router.message(Command(commands='help'))
async def process_help_command(message: Message):
    await message.answer(text=LEXICON_RU['/help'], reply_markup=yes_no_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ —Å–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É
@router.message(F.text == LEXICON_RU['yes_button'])
async def process_yes_answer(message: Message):
    await message.answer(text=LEXICON_RU['yes'], reply_markup=game_kb)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –æ—Ç–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É
@router.message(F.text == LEXICON_RU['no_button'])
async def process_no_answer(message: Message):
    await message.answer(text=LEXICON_RU['no'])


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –ª—é–±—É—é –∏–∑ –∏–≥—Ä–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
@router.message(F.text.in_([LEXICON_RU['rock'],
                            LEXICON_RU['paper'],
                            LEXICON_RU['scissors']]))
async def process_game_button(message: Message):
    bot_choice = get_bot_choice()
    await message.answer(text=f'{LEXICON_RU["bot_choice"]} '
                              f'- {LEXICON_RU[bot_choice]}')
    winner = get_winner(message.text, bot_choice)
    await message.answer(text=LEXICON_RU[winner], reply_markup=yes_no_kb)



->      services.py




->
import logging
–ö–æ–º–∞–Ω–¥–∞ import logging –≤ Python –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–æ–¥—É–ª—å logging, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞. 
–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É —è–∑—ã–∫–∞. 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è
–ú–æ–¥—É–ª—å logging –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:
DEBUG ‚Äî –¥–ª—è –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π;
INFO ‚Äî –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π;
WARNING ‚Äî –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π;
ERROR ‚Äî –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö;
CRITICAL ‚Äî –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
–°–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å, —Ñ–∞–π–ª –∏–ª–∏ –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.


->  
from aiogram.client.default import DefaultBotProperties
DefaultBotProperties ‚Äî –∫–ª–∞—Å—Å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ aiogram, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Telegram Bot.
–ù–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: –≤ —Ñ–æ—Ä–º–∞—Ç–µ HTML –∏–ª–∏ Markdown

->  
from aiogram.enums import ParseMode
ParseMode ‚Äî –ø–∞—Ä–∞–º–µ—Ç—Ä –º–µ—Ç–æ–¥–∞ sendMessage –≤ Telegram Bot API, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–∞—ë—Ç —Ä–µ–∂–∏–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. 
–ó–Ω–∞—á–µ–Ω–∏—è ParseMode:
HTML. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–µ–≥–∏ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∂–∏—Ä–Ω—ã–º –∏ –∫—É—Ä—Å–∏–≤–æ–º, –∞ —Ç–∞–∫–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏. 
Markdown. –£—Å—Ç–∞—Ä–µ–≤—à–∏–π —Ä–µ–∂–∏–º, —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏. –í —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º ‚Äî *. 
MarkdownV2. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–µ –∂–µ —Ç–µ–≥–∏, —á—Ç–æ –∏ HTML, –∞ —Ç–∞–∫–∂–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç, —Å–ø–æ–π–ª–µ—Ä).

->  
from handlers import other_handlers, user_handlers
–≠—Ç–æ –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π other_handlers –∏ user_handlers –∏–∑ —Ñ–∞–π–ª–∞ handlers. 
–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–¥–∞ –±–æ—Ç–∞ –Ω–∞ —è–∑—ã–∫–µ aiogram, —Ç–∞–∫–æ–π –∏–º–ø–æ—Ä—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–æ—É—Ç–µ—Ä—ã (—Ö—ç–Ω–¥–ª–µ—Ä—ã), –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö, –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ –±–æ—Ç–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ñ–∞–π–ª–µ main.py –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ–¥, –≥–¥–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ —Ñ–∞–π–ª–æ–≤ handlers/other_handlers.py –∏ handlers/user_handlers.py


#config.py
from dataclasses import dataclass
from environs import Env

#¬´from dataclasses import dataclass¬ª ‚Äî —ç—Ç–æ –∏–º–ø–æ—Ä—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ dataclass –∏–∑ –º–æ–¥—É–ª—è dataclasses –≤ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python. 
#–î–µ–∫–æ—Ä–∞—Ç–æ—Ä dataclass –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å data-–∫–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –∫–ª–∞—Å—Å–æ–≤. 
#–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≤–µ—Ä—Å–∏—è—Ö Python 3.7 –∏ –≤—ã—à–µ.

#class RegularBook:
#    def __init__(self, title, author):
#        self.title = title
#       self.author = author


#from dataclasses import dataclass

#@dataclass
#class Book:
#    title: str
#    author: str		


@dataclass
class TgBot:
    token: str  # –¢–æ–∫–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—É

@dataclass
class Config:
    tg_bot: TgBot

def load_config(path: str | None = None) -> Config:
    env = Env()                                         # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Env
    env.read_env(path)                                  # –ú–µ—Ç–æ–¥–æ–º read_env() —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª .env –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –Ω–µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ 
    return Config(tg_bot=TgBot(token=env('BOT_TOKEN'))


python.exe -m pip install --upgrade pip
pip install aiogram 
pip install environs       
